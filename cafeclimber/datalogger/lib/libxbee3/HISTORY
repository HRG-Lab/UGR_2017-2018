v3.0.12 - in progress
	* Fixed single-core systems no longer suffer from delayed callback execution
	* Fixed the un-escape code for use with API mode 2 - it had issues when the escape sequence crossed a read boundary
	* Fixed logging - no longer records ANSI color escape sequences to non-TTY files
	* Added more flexibility for logging - colorization, Rx data, and Tx data can be enabled / disabled at startup (via the environment) or at runtime (via function calls)
	* Fixed addr_save - no longer stores broadcast or 'unknown' addresses on connections that are created with incomplete data
	* Added 'Create Source Route' and 'Route Record Indicator' support for xbeeZB
	* Added logging of connection termination
	* Added logging libxbee instance creation end termination
	* Added apiIdentifier to xbee_pkt struct
	* Fixed XBEE_NO_NET_SERVER config option - no longer performs unnecessary actions without server functionality
	* Added XBEE_MANUAL_INIT and XBEE_MANUAL_FINI compile options
	* Added simple man page for xbee_init() and xbee_fini()
	* Fixed leak of Frame IDs after a failed call to xbee_txHandler()
	* Added broadcast Rx support for XBee Series 3 modules
	* Added XBEE_FRAME_TIMEOUT_ENABLED

v3.0.11 - 3 Dec 2014
	* Fixed library dependancies (no further requirement for -lpthread -lrt on your application)
	* Added an RPM build script, and fixed the release_src / release_source build targets
	* Added an ebuild script for Gentoo
	* Added file locking on Linux
	* Fixed silent error in xbee_frameGetFreeID() when all Frame IDs are in use
	* Fixed bug when using save_addr16 and save_addr64, along with catchall connections
	* Debug output now indicates how much data was recieved in each packet
	* Fixed major bug in network server - conValidate() now works correctly
	* xbee_logTargetSet() and xbee_logLevelSet() now announce their changes
	* Fixed xbeeZB's Identify packet parsing

v3.0.10 - 4 Sept 2013
	* Fixed xbee_frameWait()
	* Fixed libxbee::Con::Tx() - now throws a libxbee::xbee_etx
	* xbee_conRx() can now be called to just get the number of packets in the buffer
	* Added C++ compatibility with byte vectors
	* Added noWaitForAck flag so that xbee_conTx() will return straight away - useful for AT connections
	* Added xbee_conxTx() and friends to allow tracking of frame IDs
	* Added samples for libxbee <-> libxbee and I/O data
	* Transmit Status connections can now have callbacks
	* Added manuals to the repo
	* Added a Qt sample
	* Added support for XBee Series 3 modules
	* Fixed network client bug
	* Fixed a memory leak
	* Added OSX support!
	* Added support for XBee Series 6B modules

v3.0.9 - 29 Apr 2013
	* Fixed high baudrate corruption issues
	* Added a timestamp from clock_gettime() to all incoming packets
	* Fixed broken ifdef around timespec definition
	* Improved performance when locating a Frame ID
	* Fixed a corner-case where timeouts occur prematurely if the packet transmission is delayed
	* Added 'Sensor' connection type for XBee Series 2 modules
	* Implemented fundamental xbeeZB support - ZDO, etc will need to be implemented separately for now
	* Enhanced C++ usability
	* Added xbee_conTypeGet()
	* Added support for a larger range of standard baud rates on Linux and BSD
	* Added support for arbitrary baud rates on Linux and BSD (see config.mk to enable)
	* xbee_conTx() and relations now return XBEE_ETIMEOUT directly instead of via the retVal parameter
	* Improved handling of Tx status frames

v3.0.8 - 24 Dec 2012
	* Fixed analog input values
	* Improved logging format for large data blocks
	* Added coloring for tx/rx events in the log to help with debugging
	* Network interface now exchanges the server's mode as well
	* I/O packets now have the extra metadata when running as a network client
	* Added xbee_dataSet() and xbee_dataGet() functions

v3.0.7 - 14 Jun 2012
	* Fixed initialization of frame mutexes
	* Abstracted serial I/O further for Win32 port
	* General tidy of codebase
	* Added HTML documentation
	* Renamed internal ll_* functions to xbee_ll_* to avoid conflicts when statically linking
	* Fixed incorrect xbee_conTx() and xbee_convTx() behavior (was adding a '\0' byte)
	* Fixed bug in AT tx & rx handlers
	* Added support for XBee Series 5 modules
	* Added xbee_conRxWait()
	* Re-designed C++ class and build C++ library - libxbeep.so

v3.0.6 - 25 Mar 2012
	* Added C++ class
	* Fixed Series 2 addressing issue
	* Enhanced address checking abilities of xbee_conNew()
	* Completely redesigned build system
	* Made a 'defconfig' for FreeBSD
	* Re-implemented threading functions
	* Fixed buggy network interface

v3.0.5 - 09 Mar 2012
	* Added FreeBSD support
	* Renamed xbee_logGet*() -> xbee_log*Get(), and xbee_logSet*() -> xbee_log*Set()
	* Provided C++ support
	* Added xbee_vsetup()
	* Added address validation
	* Added man page documentation
	* Added xbee_conPurge()
	* Added pseudo terminal application
	* Changed to API mode 1 by default (compile time option)
	* Added 'catch-all' connections
	* Changed 'Remote AT' timeouts to 750ms
	* Relicensed to LGPLv3

v3.0.4 - 29 Feb 2012
	* Implemented rx/tx counters
	* Fixed XBee Series 2 data broadcast
	* Fixed internal bugs
	* Added sample code for retrieving library info (commit, build time, etc...)
	* Added 'net' mode, and xbee_netStart()
	* Added xbee_attachEOFCallback() to get alerts when a device error occurs (e.g: FDTI / Network disconnect)
	* Fixed mutex/thread issue
	* Added length checking on transmit functions

v3.0.3 - 21 Feb 2012
	* Fixed xbee_rxHandler() - now obeys allowFrameId flag
	* Exported xbee_pktDataGet()
	* Protected xbee_s1_io_parseInputs() against buffer overrun
	* XBee Series 1 now supports modem status connection types
	* XBee Series 2 support is completed (excluding sensor connection types)
	* Added generic sample code
	* Added more sample code for use with XBee Series 1 modules
	* Added sample code for use with XBee Series 2 modules

v3.0.2 - 20 Feb 2012
	* Added explicit logging of Tx & Rx data
	* Fixed internal bugs
	* Re-implemented ll_[get|ext]_index() functions
	* Refreshed error codes
	* XBee Series 1 support is complete
	* Added sample code for use with XBee Series 1

v3.0.1 - 19 Feb 2012
	* First functional release
	* Re-structured and flexible build system
	* Generic 'mode' framework
	* XBee Series 1 support with Data connection (16/64-bit addressing)
	* Tx Status handling enabled by default (brings Tx error back from module through libxbee)

