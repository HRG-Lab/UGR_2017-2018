.\" libxbee - a C library to aid the use of Digi's XBee wireless modules
.\"           running in API mode.
.\" 
.\" Copyright (C) 2009 onwards  Attie Grande (attie@attie.co.uk)
.\" 
.\" libxbee is free software: you can redistribute it and/or modify it
.\" under the terms of the GNU Lesser General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\" 
.\" libxbee is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
.\" GNU Lesser General Public License for more details.
.\" 
.\" You should have received a copy of the GNU Lesser General Public License
.\" along with this program. If not, see <http://www.gnu.org/licenses/>.
.TH XBEE_LOGLEVELGET 3  04-Mar-2012 "GNU" "Linux Programmer's Manual"
.SH NAME
xbee_logLevelGet, xbee_logLevelSet,
xbee_logTargetGet, xbee_logTargetSet
xbee_logRxGet, xbee_logRxSet,
xbee_logTxGet, xbee_logTxSet,
xbee_logColorGet, xbee_logColorSet
.SH SYNOPSIS
.B #include <xbee.h>
.sp
.BI "xbee_err xbee_logLevelGet(struct xbee *" xbee ", int *" level ");"
.sp 0
.BI "xbee_err xbee_logLevelSet(struct xbee *" xbee ", int " level ");"
.sp
.BI "xbee_err xbee_logTargetGet(struct xbee *" xbee ", FILE **" f ");"
.sp 0
.BI "xbee_err xbee_logTargetSet(struct xbee *" xbee ", FILE *" f ");"
.sp
.BI "xbee_err xbee_logRxGet(struct xbee *" xbee ", int *" enable ");"
.sp 0
.BI "xbee_err xbee_logRxSet(struct xbee *" xbee ", int " enabled ");"
.sp
.BI "xbee_err xbee_logTxGet(struct xbee *" xbee ", int *" enable ");"
.sp 0
.BI "xbee_err xbee_logTxSet(struct xbee *" xbee ", int " enabled ");"
.sp
.BI "xbee_err xbee_logColorGet(struct xbee *" xbee ", int *" enable ");"
.sp 0
.BI "xbee_err xbee_logColorSet(struct xbee *" xbee ", int " enabled ");"
.sp
.SH DESCRIPTION
These functions allow you to configure and retrieve the logging options for an instance of libxbee.
.sp
The
.I level
may be any number, and indicates the verbosity of log messages.
A higher number will generate a more verbose output. See
.BR xbee_log (3)
for more details on how this affects log output.
.sp
You may redirect the log output using
.BR xbee_logTargetSet ().
.I f
must be an open file descriptor that will allow writing.
By default, libxbee will log to stderr.
.sp
You may enable and disable various logging components using
.BR xbee_logRxSet "() and " xbee_logTxSet ().
.I enable
is handled as a boolean value, and will enable or disable logging of either Rx data or Tx payload data respectively.
.sp
You may also enable or disable colorized logging using
.BR xbee_logColorSet ().
.I enable
is handled as a boolean value, and will enable or disable the output of ANSI color escape sequences.
Colorized output only works for TTY devices, not files.
if you use
.BR xbee_logTargetSet ()
to log to a file, then the output will not contain ANSI color escape sequences.
.SS Return Value
On success these functions will return XBEE_ENONE, otherwise an error number from
.IR "enum xbee_errors" " (as specified in " <xbee.h> )
.SH NOTES
Some of these functions may return
.B XBEE_ENOTIMPLEMENTED
if libxbee has bee compiled with them disabled.
.sp
These settings may be configured at runtime using the following environment variables:
.in +4n
.nf
XBEE_LOG_LEVEL
XBEE_LOG_RX
XBEE_LOG_TX
XBEE_LOG_COLOR
.fi
.in
.SH EXAMPLE
.in +4n
.nf
#include <xbee.h>

struct xbee *xbee;
FILE *log;

/* initialize xbee, using xbee_setup() */

if ((log = fopen("libxbee.log", "w")) == NULL) return;

if (xbee_logTargetSet(xbee, log) != XBEE_ENONE) return;

if (xbee_logLevelSet(xbee, 100) != XBEE_ENONE) return;
.fi
.in
.SH AUTHOR
Attie Grande <attie@attie.co.uk> 
.SH "SEE ALSO"
.BR libxbee (3),
.BR xbee_setup (3),
.BR xbee_log (3)
